[tool.poetry]
name = "test-task-users-api"
version = "0.1.0"
description = ""
authors = ["Aleksandr Smelik <suntrope55@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.2"
uvicorn = "^0.32.0"
pydantic-settings = "^2.6.0"
pydantic = {extras = ["email"], version = "^2.9.2"}
sqlalchemy = {extras = ["asyncpg"], version = "^2.0.36"}
asyncpg = "^0.29.0"
alembic = "^1.13.3"
greenlet = "^3.1.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
ruff = "^0.7.0"
mypy = "^1.12.0"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = [
  ".", "src",
]
asyncio_mode="auto"

[tool.mypy]
python_version = "3.11"
strict = true
check_untyped_defs = true
ignore_missing_imports = true

exclude = ["alembic"]


[tool.ruff]
target-version = "py311"
line-length = 100
extend-exclude = [
    "alembic"
]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "R",  # Refactor
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]

ignore = [
    "B904",  # Allow raising exceptions without from e, for HTTPException
    "ARG001", # Unused function argument
]
